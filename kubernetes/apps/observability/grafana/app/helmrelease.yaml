---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: grafana
  values:
    replicas: 2

    podDisruptionBudget:
      minAvailable: 1

    annotations:
      reloader.stakater.com/auto: "true"

    serviceMonitor:
      enabled: true

    route:
      main:
        enabled: true
        hostnames:
          - &domain grafana.nasenov.dev
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana

    admin:
      existingSecret: grafana-admin

    env:
      GF_SERVER_DOMAIN: *domain
      GF_SERVER_ROOT_URL: https://%(domain)s/

    envFromSecrets:
      - name: grafana-postgres-configuration
      - name: grafana-postgres-datasource-configuration

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.observability.svc.cluster.local:9090/
            isDefault: true
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://loki-headless.observability.svc.cluster.local:3100
            jsonData:
              maxLines: 1000
          - name: Postgres
            type: postgres
            url: $POSTGRES_DATASOURCE_URL
            user: $POSTGRES_DATASOURCE_USER
            secureJsonData:
              password: $POSTGRES_DATASOURCE_PASSWORD
            jsonData:
              database: $POSTGRES_DATASOURCE_DATABASE
              sslmode: require
              maxOpenConns: 4
              maxIdleConnsAuto: true

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: emqx
            orgId: 1
            folder: EMQX
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/emqx
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: minio
            orgId: 1
            folder: MinIO
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/minio
          - name: postgresql
            orgId: 1
            folder: PostgreSQL
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/postgresql
          - name: ceph
            orgId: 1
            folder: Ceph
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ceph

    dashboards:
      default:
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 42
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        smartctl-exporter:
          # renovate: depName="SMARTctl Exporter Dashboard"
          gnetId: 22604
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        volsync:
          # renovate: depName="VolSync Dashboard"
          gnetId: 21356
          revision: 3
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
            - { name: VAR_REPLICATIONDESTNAME, value: .*-dst }
      emqx:
        authentication:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/authentication.json
          datasource: Prometheus
        authorization:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/authorization.json
          datasource: Prometheus
        client-events:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/client-events.json
          datasource: Prometheus
        messages:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/messages.json
          datasource: Prometheus
        overview:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/overview.json
          datasource: Prometheus
        rule-engine-count:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/rule-engine-count.json
          datasource: Prometheus
        rule-engine-rate:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/rule-engine-rate.json
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Loki
      minio:
        minio-dashboard:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 26
          datasource: Prometheus
        minio-bucket-dashboard:
          # renovate: depName="MinIO Bucket Dashboard"
          gnetId: 19237
          revision: 2
          datasource: Prometheus
        minio-replication-dashboard:
          # renovate: depName="MinIO Replication Dashboard"
          gnetId: 15305
          revision: 5
          datasource: Prometheus
      postgresql:
        pgbackrest:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pgbackrest.json
          datasource: Prometheus
        pod_details:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/pod_details.json
          datasource: Prometheus
        postgresql_details:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_details.json
          datasource: Prometheus
        postgresql_overview:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_overview.json
          datasource: Prometheus
        postgresql_service_health:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/postgresql_service_health.json
          datasource: Prometheus
        prometheus_alerts:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/prometheus_alerts.json
          datasource: Prometheus
        query_statistics:
          url: https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/monitoring/grafana/dashboards/query_statistics.json
          datasource: Prometheus
      ceph:
        ceph-cluster:
          # renovate: depName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: depName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: depName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus

    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard
        labelValue: ""
        searchNamespace: ALL
        folderAnnotation: grafana_folder
        provider:
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        label: grafana_datasource
        labelValue: ""
        searchNamespace: ALL
